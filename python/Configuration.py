# AUTOGENERATED. Run generator/main.py to regenerate
"""
[  0   ] [  1   ] [  2   ] [  3   ] [  4   ] [  5   ] [  6   ] [  7   ] [  8   ] [  9   ] [  10  ] [  11  ] [  12  ] [  13  ] [  14  ]
11111111 -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- PbodyX
-------- 11111111 -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- IbodyX
-------- -------- 11111111 -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- DbodyX
-------- -------- -------- 11111111 -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- PbodyY
-------- -------- -------- -------- 11111111 -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- IbodyY
-------- -------- -------- -------- -------- 11111111 -------- -------- -------- -------- -------- -------- -------- -------- -------- DbodyY
-------- -------- -------- -------- -------- -------- 11111111 -------- -------- -------- -------- -------- -------- -------- -------- PbodyW
-------- -------- -------- -------- -------- -------- -------- 11111111 -------- -------- -------- -------- -------- -------- -------- IbodyW
-------- -------- -------- -------- -------- -------- -------- -------- 11111111 -------- -------- -------- -------- -------- -------- DbodyW
-------- -------- -------- -------- -------- -------- -------- -------- -------- 11111111 -------- -------- -------- -------- -------- PbodyYaw
-------- -------- -------- -------- -------- -------- -------- -------- -------- -------- 11111111 -------- -------- -------- -------- IbodyYaw
-------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- 11111111 -------- -------- -------- DbodyYaw
-------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- 11111111 -------- -------- Pwheels
-------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- 11111111 -------- Iwheels
-------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- 11111111 Dwheels
"""

import numpy as np
from . import BaseTypes



class Configuration:
    PbodyX = 0                # float   [0.000, 1.000]       P gain of the PID for body_x (x-direction)
    IbodyX = 0                # float   [0.000, 1.000]       I gain of the PID for body_x (x-direction)
    DbodyX = 0                # float   [0.000, 1.000]       D gain of the PID for body_x (x-direction)
    PbodyY = 0                # float   [0.000, 1.000]       P gain of the PID for body_y (y-direction)
    IbodyY = 0                # float   [0.000, 1.000]       I gain of the PID for body_y (y-direction)
    DbodyY = 0                # float   [0.000, 1.000]       D gain of the PID for body_y (y-direction)
    PbodyW = 0                # float   [0.000, 40.000]      P gain of the PID for body_w (Angular velocity)
    IbodyW = 0                # float   [0.000, 20.000]      I gain of the PID for body_w (Angular velocity)
    DbodyW = 0                # float   [0.000, 10.000]      D gain of the PID for body_w (Angular velocity)
    PbodyYaw = 0              # float   [0.000, 40.000]      P gain of the PID for body_yaw (Absolute angle)
    IbodyYaw = 0              # float   [0.000, 20.000]      I gain of the PID for body_yaw (Absolute angle)
    DbodyYaw = 0              # float   [0.000, 10.000]      D gain of the PID for body_yaw (Absolute angle)
    Pwheels = 0               # float   [0.000, 40.000]      P gain of the PID for the wheels
    Iwheels = 0               # float   [0.000, 20.000]      I gain of the PID for the wheels
    Dwheels = 0               # float   [0.000, 10.000]      D gain of the PID for the wheels



# ================================ GETTERS ================================
    @staticmethod
    def get_PbodyX(payload):
        _PbodyX = ((payload[0]));
        return (_PbodyX * 0.0039215686274510) + 0.0000000000000000;

    @staticmethod
    def get_IbodyX(payload):
        _IbodyX = ((payload[1]));
        return (_IbodyX * 0.0039215686274510) + 0.0000000000000000;

    @staticmethod
    def get_DbodyX(payload):
        _DbodyX = ((payload[2]));
        return (_DbodyX * 0.0039215686274510) + 0.0000000000000000;

    @staticmethod
    def get_PbodyY(payload):
        _PbodyY = ((payload[3]));
        return (_PbodyY * 0.0039215686274510) + 0.0000000000000000;

    @staticmethod
    def get_IbodyY(payload):
        _IbodyY = ((payload[4]));
        return (_IbodyY * 0.0039215686274510) + 0.0000000000000000;

    @staticmethod
    def get_DbodyY(payload):
        _DbodyY = ((payload[5]));
        return (_DbodyY * 0.0039215686274510) + 0.0000000000000000;

    @staticmethod
    def get_PbodyW(payload):
        _PbodyW = ((payload[6]));
        return (_PbodyW * 0.1568627450980392) + 0.0000000000000000;

    @staticmethod
    def get_IbodyW(payload):
        _IbodyW = ((payload[7]));
        return (_IbodyW * 0.0784313725490196) + 0.0000000000000000;

    @staticmethod
    def get_DbodyW(payload):
        _DbodyW = ((payload[8]));
        return (_DbodyW * 0.0392156862745098) + 0.0000000000000000;

    @staticmethod
    def get_PbodyYaw(payload):
        _PbodyYaw = ((payload[9]));
        return (_PbodyYaw * 0.1568627450980392) + 0.0000000000000000;

    @staticmethod
    def get_IbodyYaw(payload):
        _IbodyYaw = ((payload[10]));
        return (_IbodyYaw * 0.0784313725490196) + 0.0000000000000000;

    @staticmethod
    def get_DbodyYaw(payload):
        _DbodyYaw = ((payload[11]));
        return (_DbodyYaw * 0.0392156862745098) + 0.0000000000000000;

    @staticmethod
    def get_Pwheels(payload):
        _Pwheels = ((payload[12]));
        return (_Pwheels * 0.1568627450980392) + 0.0000000000000000;

    @staticmethod
    def get_Iwheels(payload):
        _Iwheels = ((payload[13]));
        return (_Iwheels * 0.0784313725490196) + 0.0000000000000000;

    @staticmethod
    def get_Dwheels(payload):
        _Dwheels = ((payload[14]));
        return (_Dwheels * 0.0392156862745098) + 0.0000000000000000;

# ================================ SETTERS ================================
    @staticmethod
    def set_PbodyX(payload, PbodyX):
        _PbodyX = int(PbodyX / 0.0039215686274510);
        payload[0] = _PbodyX;

    @staticmethod
    def set_IbodyX(payload, IbodyX):
        _IbodyX = int(IbodyX / 0.0039215686274510);
        payload[1] = _IbodyX;

    @staticmethod
    def set_DbodyX(payload, DbodyX):
        _DbodyX = int(DbodyX / 0.0039215686274510);
        payload[2] = _DbodyX;

    @staticmethod
    def set_PbodyY(payload, PbodyY):
        _PbodyY = int(PbodyY / 0.0039215686274510);
        payload[3] = _PbodyY;

    @staticmethod
    def set_IbodyY(payload, IbodyY):
        _IbodyY = int(IbodyY / 0.0039215686274510);
        payload[4] = _IbodyY;

    @staticmethod
    def set_DbodyY(payload, DbodyY):
        _DbodyY = int(DbodyY / 0.0039215686274510);
        payload[5] = _DbodyY;

    @staticmethod
    def set_PbodyW(payload, PbodyW):
        _PbodyW = int(PbodyW / 0.1568627450980392);
        payload[6] = _PbodyW;

    @staticmethod
    def set_IbodyW(payload, IbodyW):
        _IbodyW = int(IbodyW / 0.0784313725490196);
        payload[7] = _IbodyW;

    @staticmethod
    def set_DbodyW(payload, DbodyW):
        _DbodyW = int(DbodyW / 0.0392156862745098);
        payload[8] = _DbodyW;

    @staticmethod
    def set_PbodyYaw(payload, PbodyYaw):
        _PbodyYaw = int(PbodyYaw / 0.1568627450980392);
        payload[9] = _PbodyYaw;

    @staticmethod
    def set_IbodyYaw(payload, IbodyYaw):
        _IbodyYaw = int(IbodyYaw / 0.0784313725490196);
        payload[10] = _IbodyYaw;

    @staticmethod
    def set_DbodyYaw(payload, DbodyYaw):
        _DbodyYaw = int(DbodyYaw / 0.0392156862745098);
        payload[11] = _DbodyYaw;

    @staticmethod
    def set_Pwheels(payload, Pwheels):
        _Pwheels = int(Pwheels / 0.1568627450980392);
        payload[12] = _Pwheels;

    @staticmethod
    def set_Iwheels(payload, Iwheels):
        _Iwheels = int(Iwheels / 0.0784313725490196);
        payload[13] = _Iwheels;

    @staticmethod
    def set_Dwheels(payload, Dwheels):
        _Dwheels = int(Dwheels / 0.0392156862745098);
        payload[14] = _Dwheels;

# ================================ ENCODE ================================
    def encode(self):
        payload = np.zeros(BaseTypes.PACKET_SIZE_CONFIGURATION, dtype=np.uint8)
        Configuration.set_PbodyX              (payload, self.PbodyX)
        Configuration.set_IbodyX              (payload, self.IbodyX)
        Configuration.set_DbodyX              (payload, self.DbodyX)
        Configuration.set_PbodyY              (payload, self.PbodyY)
        Configuration.set_IbodyY              (payload, self.IbodyY)
        Configuration.set_DbodyY              (payload, self.DbodyY)
        Configuration.set_PbodyW              (payload, self.PbodyW)
        Configuration.set_IbodyW              (payload, self.IbodyW)
        Configuration.set_DbodyW              (payload, self.DbodyW)
        Configuration.set_PbodyYaw            (payload, self.PbodyYaw)
        Configuration.set_IbodyYaw            (payload, self.IbodyYaw)
        Configuration.set_DbodyYaw            (payload, self.DbodyYaw)
        Configuration.set_Pwheels             (payload, self.Pwheels)
        Configuration.set_Iwheels             (payload, self.Iwheels)
        Configuration.set_Dwheels             (payload, self.Dwheels)
        return payload


# ================================ DECODE ================================
    def decode(self, payload):
        self.PbodyX           = Configuration.get_PbodyX(payload)
        self.IbodyX           = Configuration.get_IbodyX(payload)
        self.DbodyX           = Configuration.get_DbodyX(payload)
        self.PbodyY           = Configuration.get_PbodyY(payload)
        self.IbodyY           = Configuration.get_IbodyY(payload)
        self.DbodyY           = Configuration.get_DbodyY(payload)
        self.PbodyW           = Configuration.get_PbodyW(payload)
        self.IbodyW           = Configuration.get_IbodyW(payload)
        self.DbodyW           = Configuration.get_DbodyW(payload)
        self.PbodyYaw         = Configuration.get_PbodyYaw(payload)
        self.IbodyYaw         = Configuration.get_IbodyYaw(payload)
        self.DbodyYaw         = Configuration.get_DbodyYaw(payload)
        self.Pwheels          = Configuration.get_Pwheels(payload)
        self.Iwheels          = Configuration.get_Iwheels(payload)
        self.Dwheels          = Configuration.get_Dwheels(payload)


    def print_bit_string(self):
        payload = self.encode()
        for i in range(len(payload)):
            print(format(payload[i], '08b'), end=" ")
        print()
